{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPxYlofTyqFXmK/pTPhLp8n",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/deltadantas/dio-sistema-bancario/blob/main/sistema_bancario.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JSu_chi4QeTy"
      },
      "outputs": [],
      "source": [
        "def valida_numero(valor):\n",
        "  try:\n",
        "    float(valor)\n",
        "    return True\n",
        "  except ValueError:\n",
        "    return False\n",
        "\n",
        "def valida_opcao(opcao):\n",
        "  return opcao in [\"d\", \"s\", \"e\", \"q\"]\n",
        "\n",
        "def deposito(saldo, extrato):\n",
        "  valor = input(\"Informe o valor do depósito: \")\n",
        "  if valida_numero(valor):\n",
        "    valor = float(valor)\n",
        "    if valor > 0:\n",
        "      saldo += valor\n",
        "      extrato += f\"Depósito: R$ {valor:.2f}\\n\"\n",
        "      print(\"Depósito realizado com sucesso!\")\n",
        "    else:\n",
        "      print(\"Valor inválido. Informe um valor positivo.\")\n",
        "  else:\n",
        "    print(\"Valor inválido. Informe um número.\")\n",
        "  return saldo, extrato\n",
        "\n",
        "def saque(saldo, extrato, numero_saques, limite_saques, limite):\n",
        "  valor = input(\"Informe o valor do saque: \")\n",
        "  if valida_numero(valor):\n",
        "    valor = float(valor)\n",
        "    excedeu_saldo = valor > saldo\n",
        "    excedeu_limite = valor > limite\n",
        "    excedeu_saques = numero_saques >= limite_saques\n",
        "    if excedeu_saldo:\n",
        "      print(\"Saldo insuficiente.\")\n",
        "    elif excedeu_limite:\n",
        "      print(\"Valor do saque excede o limite.\")\n",
        "    elif excedeu_saques:\n",
        "      print(\"Número máximo de saques excedido.\")\n",
        "    elif valor > 0:\n",
        "      saldo -= valor\n",
        "      extrato += f\"Saque: R$ {valor:.2f}\\n\"\n",
        "      numero_saques += 1\n",
        "      print(\"Saque realizado com sucesso!\")\n",
        "    else:\n",
        "      print(\"Valor inválido. Informe um valor positivo.\")\n",
        "  else:\n",
        "    print(\"Valor inválido. Informe um número.\")\n",
        "  return saldo, extrato, numero_saques\n",
        "\n",
        "def extrato(saldo, extrato):\n",
        "  resultado = f\"\"\"\n",
        "  \\n================ EXTRATO ================\\n\n",
        "  {\"Não foram realizadas movimentações.\" if not extrato else extrato}\n",
        "  \\nSaldo: R$ {saldo:.2f}\\n\n",
        "  ================================\\n\n",
        "  \"\"\"\n",
        "  return resultado\n",
        "\n",
        "\n",
        "\n",
        "def main():\n",
        "  saldo = 0\n",
        "  numero_saques = 0\n",
        "  limite_saques = 3\n",
        "  limite = 500\n",
        "  extrato = \"\"\n",
        "\n",
        "  while True:\n",
        "    menu = \"\"\"\n",
        "\n",
        "[d] Depositar\n",
        "[s] Sacar\n",
        "[e] Extrato\n",
        "[q] Sair\n",
        "\n",
        "=> \"\"\"\n",
        "\n",
        "    opcao = input(menu)\n",
        "    if valida_opcao(opcao):\n",
        "      if opcao == \"d\":\n",
        "        saldo, extrato = deposito(saldo, extrato)\n",
        "      elif opcao == \"s\":\n",
        "        saldo, extrato, numero_saques = saque(saldo, extrato, numero_saques, limite_saques, limite)\n",
        "      elif opcao == \"e\":\n",
        "        print(\"\\n================  EXTRATO  ================\")\n",
        "        print(\"Não foram realizadas movimentações.\" if not extrato else extrato)\n",
        "        print(f\"\\nSaldo: R$ {saldo:.2f}\")\n",
        "        print(\"================================\")\n",
        "\n",
        "      elif opcao == \"q\":\n",
        "        break\n",
        "    else:\n",
        "      print(\"Opção inválida. Por favor, selecione novamente a operação desejada.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "  main()\n",
        "\n"
      ]
    }
  ]
}